import R from 'ramda';
import { dispatchWith } from '../';
var notFalse =
/*#__PURE__*/
R.complement(R.equals)(false);
describe('dispatchWith', function () {
  it('should return first not false result', function () {
    expect(dispatchWith(notFalse, [R.F, R.identity, R.F])(3)).toBe(3);
  });
  it('should be variadic', function () {
    expect(dispatchWith(notFalse, [function (a, b) {
      return a + b;
    }, R.F])(3, 2)).toBe(5);
  });
  it('should be curried', function () {
    expect(dispatchWith(notFalse)([function (a, b) {
      return a + b;
    }, R.F])(3, 2)).toBe(5);
  });
  it('should return undefined', function () {
    expect(dispatchWith(notFalse, [R.F, R.identity, R.F])(false)).toBe(undefined);
  });
});