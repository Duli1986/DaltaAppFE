import memoizeWithIdentity from '../memoizeWithIdentity';
describe('memoizeWithIdentity', function () {
  it('should be defined', function () {
    expect(memoizeWithIdentity).toBeDefined();
  });
  it('should call target function', function () {
    var targetFunction = jest.fn();
    var memoizedFunction = memoizeWithIdentity(targetFunction);
    memoizedFunction();
    expect(targetFunction.mock.calls.length).toBe(1);
  });
  describe('when memoized function is called twice with same argument', function () {
    it('should call target function once', function () {
      var targetFunction = jest.fn();
      var memoizedFunction = memoizeWithIdentity(targetFunction);
      memoizedFunction(1);
      memoizedFunction(1);
      expect(targetFunction.mock.calls.length).toBe(1);
    });
    it('should return the same result for both calls', function () {
      var memoizedFunction = memoizeWithIdentity(jest.fn());
      var firstResult = memoizedFunction(1);
      var secondResult = memoizedFunction(1);
      expect(firstResult === secondResult).toBeTruthy();
    });
  });
  it('should call target function twice when called twice with different argument', function () {
    var targetFunction = jest.fn();
    var memoizedFunction = memoizeWithIdentity(targetFunction);
    memoizedFunction(1);
    memoizedFunction(2);
    expect(targetFunction.mock.calls.length).toBe(2);
  });
});