import { dotPathNotSatisfies } from '../';

var s = function s(x) {
  return JSON.stringify(x, null, 2);
};

describe('dotPathNotSatisfies', function () {
  var itHelper = function itHelper(pred, path, x, result) {
    return it("for path ".concat(s(path), " and object ").concat(s(x), " returns ").concat(result), function () {
      expect(dotPathNotSatisfies(pred)(path)(x)).toEqual(result);
    });
  };

  var positive = function positive(y) {
    return y > 0;
  };

  itHelper(positive, 'a.b', {}, true);
  itHelper(positive, 'a.b', {
    a: {
      b: 1
    }
  }, false);
  itHelper(positive, 'a.b', {
    a: {
      c: 3
    }
  }, true);
  itHelper(positive, 'a.c', {
    a: {
      b: -3
    }
  }, true);
});